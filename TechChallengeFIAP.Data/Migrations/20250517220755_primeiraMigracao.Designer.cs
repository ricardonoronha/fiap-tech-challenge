// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechChallengeFIAP.Data.Repositorios;

#nullable disable

namespace TechChallengeFIAP.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250517220755_primeiraMigracao")]
    partial class primeiraMigracao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechChallengeFIAP.Domain.Entidades.Jogo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassificacaoJogo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("DataLancamento")
                        .HasColumnType("DATETIME");

                    b.Property<string>("DescricaoJogo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("EhInativo")
                        .HasColumnType("bit");

                    b.Property<string>("NomeJogo")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<decimal>("ValorPromocao")
                        .HasColumnType("DECIMAL(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Jogo", (string)null);
                });

            modelBuilder.Entity("TechChallengeFIAP.Domain.Entidades.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("EhAdministrador")
                        .HasColumnType("BIT");

                    b.Property<bool>("EhAtivo")
                        .HasColumnType("BIT");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("HashSenha")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("UsuarioAtualizador")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("UsuarioCriador")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id");

                    b.ToTable("Pessoa", (string)null);
                });

            modelBuilder.Entity("TechChallengeFIAP.Domain.Entidades.Promocao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("EhCancelada")
                        .HasColumnType("BIT");

                    b.Property<Guid>("JogoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("JogoId");

                    b.ToTable("Promocao", (string)null);
                });

            modelBuilder.Entity("TechChallengeFIAP.Domain.Entidades.Promocao", b =>
                {
                    b.HasOne("TechChallengeFIAP.Domain.Entidades.Jogo", "Jogo")
                        .WithMany("Promocoes")
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");
                });

            modelBuilder.Entity("TechChallengeFIAP.Domain.Entidades.Jogo", b =>
                {
                    b.Navigation("Promocoes");
                });
#pragma warning restore 612, 618
        }
    }
}
